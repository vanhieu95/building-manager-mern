// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  password      String
  role          Role           @default(USER)
  refreshTokens RefreshToken[]
  projects      Project[]
  deleted       Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([email])
}

enum Role {
  USER
  ADMIN
}

model RefreshToken {
  id          String   @id @default(uuid())
  hashedToken String
  revoked     Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Investment {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  active    Boolean
  parent    Investment?  @relation("ParentChildInvesment", fields: [parentId], references: [id], onDelete: Cascade)
  children  Investment[] @relation("ParentChildInvesment")
  parentId  Int?
  projects  Project[]
  deleted   Boolean      @default(false)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Project {
  id                 Int        @id @default(autoincrement())
  name               String
  code               String?
  active             Boolean
  totalValue         Float
  previousYearsValue Float?
  expectYearValue    Float?
  adjustYearValue    Float
  lotteryValue       Float?
  currentYearValue   Float?
  progress           String?
  note               String?
  personInCharge     String
  company            String
  investment         Investment @relation(fields: [investmentId], references: [id])
  investmentId       Int
  user               User       @relation(fields: [userId], references: [id])
  userId             Int
  deleted            Boolean    @default(false)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
}
